$red:               hsl(0, 100%, 50%);
$red-orange:       hsl(10, 100%, 50%);
$orange-red:       hsl(20, 100%, 50%);
$orange:           hsl(30, 100%, 50%);
$orange-yellow:    hsl(40, 100%, 50%);
$yellow-orange:    hsl(50, 100%, 50%);
$yellow:           hsl(60, 100%, 50%);
$yellow-lime:      hsl(70, 100%, 50%);
$lime-yellow:      hsl(80, 100%, 50%);
$lime:             hsl(90, 100%, 50%);
$lime-green:      hsl(100, 100%, 50%);
$green-lime:      hsl(110, 100%, 50%);
$green:           hsl(120, 100%, 50%);
$green-teal:      hsl(130, 100%, 50%);
$teal-green:      hsl(140, 100%, 50%);
$teal:            hsl(150, 100%, 50%);
$teal-cyan:       hsl(160, 100%, 50%);
$cyan-teal:       hsl(170, 100%, 50%);
$cyan:            hsl(180, 100%, 50%);
$cyan-azure:      hsl(190, 100%, 50%);
$azure-cyan:      hsl(200, 100%, 50%);
$azure:           hsl(210, 100%, 50%);
$azure-blue:      hsl(220, 100%, 50%);
$blue-azure:      hsl(230, 100%, 50%);
$blue:            hsl(240, 100%, 50%);
$blue-violet:     hsl(250, 100%, 50%);
$violet-blue:     hsl(260, 100%, 50%);
$violet:          hsl(270, 100%, 50%);
$violet-magenta:  hsl(280, 100%, 50%);
$magenta-blue:    hsl(290, 100%, 50%);
$magenta:         hsl(300, 100%, 50%);
$magenta-pink:    hsl(310, 100%, 50%);
$pink-magenta:    hsl(320, 100%, 50%);
$pink:            hsl(330, 100%, 50%);
$pink-red:        hsl(340, 100%, 50%);
$red-pink:        hsl(350, 100%, 50%);

$theme-color-accent:              red;

/// Remove the unit of a length
/// @param {Number} $number - Number to remove unit from
/// @return {Number} - Unitless number
@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

@function getColor($color, $fromPrimaryColor: $theme-color-accent ) {
  // Orange

  $red-min:     0;
  $red-max:     20;
  $red-min2:    341;
  $red-max2:    360;
  $orange-min:  21;
  $orange-max:  40;
  $yellow-min:  41;
  $yellow-max:  65;
  $green-min:   66;
  $green-max:   150;
  $blue-min:    150;
  $blue-max:    250;
  $indigo-min:  251;
  $indigo-max:  270;
  $purple-min:  271;
  $purple-max:  290;
  $pink-min:    291;
  $pink-max:    340;

  // @function getNewHue(){
  //   @return adjust-hue($fromPrimaryColor, (hue(orange) - hue(red)))
  // }

  @if $color == "orange" {
    @if (hue($fromPrimaryColor) >= hue($red) and hue($fromPrimaryColor) <= hue($orange-red)) or (hue($fromPrimaryColor) >= $red-min2 and hue($fromPrimaryColor) <= $red-max2) { //if primary is red
      @return adjust-hue($fromPrimaryColor, (hue(orange) - (hue($orange-red)/2 )));
    } @else if hue($fromPrimaryColor) >= $orange-min and hue($fromPrimaryColor) <= $orange-max { //if primary is orange
      @return $fromPrimaryColor;
    } @else if hue($fromPrimaryColor) >= $yellow-min and hue($fromPrimaryColor) <= $yellow-max { //if primary is yellow
      @return adjust-hue($fromPrimaryColor, -(hue($fromPrimaryColor) - hue(orange)));
    } @else if hue($fromPrimaryColor) >= $green-min and hue($fromPrimaryColor) <= $green-max { //if primary is green
      @return adjust-hue($fromPrimaryColor, -(hue($fromPrimaryColor) - hue(orange)));
    } @else if hue($fromPrimaryColor) >= $blue-min and hue($fromPrimaryColor) <= $blue-max { //if primary is blue
      @return adjust-hue($fromPrimaryColor, -(hue($fromPrimaryColor) - hue(orange)));
    } @else if hue($fromPrimaryColor) >= $indigo-min and hue($fromPrimaryColor) <= $indigo-max { //if primary is indigo
      @return adjust-hue($fromPrimaryColor, -(hue($fromPrimaryColor) - hue(orange)));
    } @else if hue($fromPrimaryColor) >= $purple-min and hue($fromPrimaryColor) <= $purple-max { //if primary is purple
      @return adjust-hue($fromPrimaryColor, -(hue($fromPrimaryColor) - hue(orange)));
    } @else if hue($fromPrimaryColor) >= $pink-min and hue($fromPrimaryColor) <= $pink-max { //if primary is pink
      @return adjust-hue($fromPrimaryColor, -(hue($fromPrimaryColor) - hue(orange)));
    }
  } @else {
    @error "Sorry, you must enter 'red, orange, yellow, green, blue, indigo, purple, pink'";
  }
  @return red;
}

.h1 {
  color: getColor("orange")!important;
}

$orange:  getColor("orange");
